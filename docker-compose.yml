version: '3'
services:
  ##order-db
  orderDb:
    image: mysql:latest
    container_name: order-db-container
    environment:
      MYSQL_ROOT_PASSWORD: mysql@root
      MYSQL_DATABASE: order-service
      MYSQL_USER: order-user
      MYSQL_PASSWORD: password@order
    ports:
      - "3306:3306"
    volumes:
      - ./mysql-order-data:/var/lib/mysql
    expose:
      - "3306"
    restart: unless-stopped


  #inventory-db
  inventoryDb:
    image: mysql:latest
    container_name: inventory-db-container
    environment:
      MYSQL_ROOT_PASSWORD: mysql@root
      MYSQL_DATABASE: inventory-service
      MYSQL_USER: inventory-user
      MYSQL_PASSWORD: password@inventory
    volumes:
      - ./mysql-inventory-data:/var/lib/mysql
    expose:
      - "3307"
    ports:
      - "3307:3307"
    command: -p 3307
    restart: unless-stopped

  #product-mongodb
  productDb:
    image: mongo:latest
    container_name: product-db-container
    environment:
      MONGO_INITDB_ROOT_USERNAME: product-user
      MONGO_INITDB_ROOT_PASSWORD: password@product
    ports:
      - "27017:27017"
    volumes:
      - ./mongo-data:/data/db
    restart: unless-stopped

  ##keycloack-mysql
  keyCloak-mysql:
    container_name: keycloak-mysql
    image: mysql:latest
    volumes:
      -  ./mysql-keycloak:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: mysql@root
      MYSQL_DATABASE: keycloak-mysql
      MYSQL_USER: keycloak-mysql-user
      MYSQL_PASSWORD: password@keycloak-mysql

  ##keycloak
  keycloak:
    container_name: keycloak
    image: quay.io/keycloak/keycloak:22.0.5
    command: ["start-dev","--import-realm"]
    environment:
      DB_VENDOR: MYSQL
      DB_ADDR: mysql
      DB_DATABASE: keycloak
      DB_USER: keycloak-user
      DB_PASSWORD: password@keycloak
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin@123
    ports:
      - "8080:8080"
    volumes:
      - ./realms:/opt/keycloak/data/import
    depends_on:
      - keyCloak-mysql

  ##Zookeeper
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  ##kafka-broker
  broker:
    image: confluentinc/cp-kafka:latest
    container_name: broker
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  ##Zipkin
  zipkin:
    container_name: zipkin
    image: openzipkin/zipkin
    ports:
      - "9411:9411"

  ##Eureka server
  discovery-server:
    image: tarunstrrd/discovery-server:latest
    container_name: discovery-server
    ports:
      - "8761:8761"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - zipkin

  ##apigateway
  api-gateway:
    image: tarunstrrd/api-gateway:latest
    container_name: api-gateway
    ports:
      - "8181:8080"
    expose:
      - "8181"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_SECURITY= TRACE
    depends_on:
      - zipkin
      - discovery-server
      - keycloak

  ##product-service
  product-service:
    image: tarunstrrd/product-service:latest
    container_name: product-service
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - productDb
      - discovery-server
      - api-gateway

  ##order-service
  order-service:
    image: tarunstrrd/order-service:latest
    container_name: order-service
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - orderDb
      - broker
      - zipkin
      - discovery-server
      - api-gateway

  ##inventory-service
  inventory-service:
    image: tarunstrrd/inventory-service:latest
    container_name: inventory-service
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - inventoryDb
      - discovery-server
      - api-gateway

  ##notification-service
  notification-service:
    container_name: notification-service
    image: tarunstrrd/notification-service:latest
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - zipkin
      - broker
      - discovery-server
      - api-gateway
